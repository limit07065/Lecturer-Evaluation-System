//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Class_Semester", "Semester", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.Semester), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Class), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Class_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.Subject), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Class), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Class_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.User), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Class), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Enroll_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.Class), "Enroll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Enroll), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Rate_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.Class), "Rate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Rate), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Enroll_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.User), "Enroll", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Enroll), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Rate_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Lecturer_Evaluation_System.User), "Rate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Lecturer_Evaluation_System.Rate), true)]

#endregion

namespace Lecturer_Evaluation_System
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Enroll> Enrolls
        {
            get
            {
                if ((_Enrolls == null))
                {
                    _Enrolls = base.CreateObjectSet<Enroll>("Enrolls");
                }
                return _Enrolls;
            }
        }
        private ObjectSet<Enroll> _Enrolls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rate> Rates
        {
            get
            {
                if ((_Rates == null))
                {
                    _Rates = base.CreateObjectSet<Rate>("Rates");
                }
                return _Rates;
            }
        }
        private ObjectSet<Rate> _Rates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Semester> Semesters
        {
            get
            {
                if ((_Semesters == null))
                {
                    _Semesters = base.CreateObjectSet<Semester>("Semesters");
                }
                return _Semesters;
            }
        }
        private ObjectSet<Semester> _Semesters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Enrolls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnrolls(Enroll enroll)
        {
            base.AddObject("Enrolls", enroll);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRates(Rate rate)
        {
            base.AddObject("Rates", rate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Semesters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemesters(Semester semester)
        {
            base.AddObject("Semesters", semester);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classID">Initial value of the classID property.</param>
        public static Class CreateClass(global::System.Int32 classID)
        {
            Class @class = new Class();
            @class.classID = classID;
            return @class;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 classID
        {
            get
            {
                return _classID;
            }
            set
            {
                if (_classID != value)
                {
                    OnclassIDChanging(value);
                    ReportPropertyChanging("classID");
                    _classID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("classID");
                    OnclassIDChanged();
                }
            }
        }
        private global::System.Int32 _classID;
        partial void OnclassIDChanging(global::System.Int32 value);
        partial void OnclassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String className
        {
            get
            {
                return _className;
            }
            set
            {
                OnclassNameChanging(value);
                ReportPropertyChanging("className");
                _className = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("className");
                OnclassNameChanged();
            }
        }
        private global::System.String _className;
        partial void OnclassNameChanging(global::System.String value);
        partial void OnclassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> subjectID
        {
            get
            {
                return _subjectID;
            }
            set
            {
                OnsubjectIDChanging(value);
                ReportPropertyChanging("subjectID");
                _subjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("subjectID");
                OnsubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _subjectID;
        partial void OnsubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnsubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> semesterID
        {
            get
            {
                return _semesterID;
            }
            set
            {
                OnsemesterIDChanging(value);
                ReportPropertyChanging("semesterID");
                _semesterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("semesterID");
                OnsemesterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _semesterID;
        partial void OnsemesterIDChanging(Nullable<global::System.Int32> value);
        partial void OnsemesterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lecturerID
        {
            get
            {
                return _lecturerID;
            }
            set
            {
                OnlecturerIDChanging(value);
                ReportPropertyChanging("lecturerID");
                _lecturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lecturerID");
                OnlecturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _lecturerID;
        partial void OnlecturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnlecturerIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_Semester", "Semester")]
        public Semester Semester
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("DatabaseModel.FK_Class_Semester", "Semester").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("DatabaseModel.FK_Class_Semester", "Semester").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Semester> SemesterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Semester>("DatabaseModel.FK_Class_Semester", "Semester");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Semester>("DatabaseModel.FK_Class_Semester", "Semester", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("DatabaseModel.FK_Class_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("DatabaseModel.FK_Class_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("DatabaseModel.FK_Class_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("DatabaseModel.FK_Class_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Class_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Class_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Class_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_Class_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Enroll_Class", "Enroll")]
        public EntityCollection<Enroll> Enrolls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enroll>("DatabaseModel.FK_Enroll_Class", "Enroll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enroll>("DatabaseModel.FK_Enroll_Class", "Enroll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Rate_Class", "Rate")]
        public EntityCollection<Rate> Rates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rate>("DatabaseModel.FK_Rate_Class", "Rate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rate>("DatabaseModel.FK_Rate_Class", "Rate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Enroll")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enroll : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Enroll object.
        /// </summary>
        /// <param name="enrollID">Initial value of the enrollID property.</param>
        public static Enroll CreateEnroll(global::System.Int32 enrollID)
        {
            Enroll enroll = new Enroll();
            enroll.enrollID = enrollID;
            return enroll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 enrollID
        {
            get
            {
                return _enrollID;
            }
            set
            {
                if (_enrollID != value)
                {
                    OnenrollIDChanging(value);
                    ReportPropertyChanging("enrollID");
                    _enrollID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("enrollID");
                    OnenrollIDChanged();
                }
            }
        }
        private global::System.Int32 _enrollID;
        partial void OnenrollIDChanging(global::System.Int32 value);
        partial void OnenrollIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> studentID
        {
            get
            {
                return _studentID;
            }
            set
            {
                OnstudentIDChanging(value);
                ReportPropertyChanging("studentID");
                _studentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("studentID");
                OnstudentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _studentID;
        partial void OnstudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnstudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> classID
        {
            get
            {
                return _classID;
            }
            set
            {
                OnclassIDChanging(value);
                ReportPropertyChanging("classID");
                _classID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("classID");
                OnclassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _classID;
        partial void OnclassIDChanging(Nullable<global::System.Int32> value);
        partial void OnclassIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Enroll_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Enroll_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Enroll_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Enroll_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("DatabaseModel.FK_Enroll_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Enroll_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Enroll_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Enroll_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Enroll_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_Enroll_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Rate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rate object.
        /// </summary>
        /// <param name="rateID">Initial value of the rateID property.</param>
        public static Rate CreateRate(global::System.Int32 rateID)
        {
            Rate rate = new Rate();
            rate.rateID = rateID;
            return rate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rateID
        {
            get
            {
                return _rateID;
            }
            set
            {
                if (_rateID != value)
                {
                    OnrateIDChanging(value);
                    ReportPropertyChanging("rateID");
                    _rateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rateID");
                    OnrateIDChanged();
                }
            }
        }
        private global::System.Int32 _rateID;
        partial void OnrateIDChanging(global::System.Int32 value);
        partial void OnrateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> question1
        {
            get
            {
                return _question1;
            }
            set
            {
                Onquestion1Changing(value);
                ReportPropertyChanging("question1");
                _question1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("question1");
                Onquestion1Changed();
            }
        }
        private Nullable<global::System.Byte> _question1;
        partial void Onquestion1Changing(Nullable<global::System.Byte> value);
        partial void Onquestion1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> question2
        {
            get
            {
                return _question2;
            }
            set
            {
                Onquestion2Changing(value);
                ReportPropertyChanging("question2");
                _question2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("question2");
                Onquestion2Changed();
            }
        }
        private Nullable<global::System.Byte> _question2;
        partial void Onquestion2Changing(Nullable<global::System.Byte> value);
        partial void Onquestion2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> question3
        {
            get
            {
                return _question3;
            }
            set
            {
                Onquestion3Changing(value);
                ReportPropertyChanging("question3");
                _question3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("question3");
                Onquestion3Changed();
            }
        }
        private Nullable<global::System.Byte> _question3;
        partial void Onquestion3Changing(Nullable<global::System.Byte> value);
        partial void Onquestion3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> question4
        {
            get
            {
                return _question4;
            }
            set
            {
                Onquestion4Changing(value);
                ReportPropertyChanging("question4");
                _question4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("question4");
                Onquestion4Changed();
            }
        }
        private Nullable<global::System.Byte> _question4;
        partial void Onquestion4Changing(Nullable<global::System.Byte> value);
        partial void Onquestion4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> question5
        {
            get
            {
                return _question5;
            }
            set
            {
                Onquestion5Changing(value);
                ReportPropertyChanging("question5");
                _question5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("question5");
                Onquestion5Changed();
            }
        }
        private Nullable<global::System.Byte> _question5;
        partial void Onquestion5Changing(Nullable<global::System.Byte> value);
        partial void Onquestion5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> studentID
        {
            get
            {
                return _studentID;
            }
            set
            {
                OnstudentIDChanging(value);
                ReportPropertyChanging("studentID");
                _studentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("studentID");
                OnstudentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _studentID;
        partial void OnstudentIDChanging(Nullable<global::System.Int32> value);
        partial void OnstudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> classID
        {
            get
            {
                return _classID;
            }
            set
            {
                OnclassIDChanging(value);
                ReportPropertyChanging("classID");
                _classID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("classID");
                OnclassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _classID;
        partial void OnclassIDChanging(Nullable<global::System.Int32> value);
        partial void OnclassIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Rate_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Rate_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Rate_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("DatabaseModel.FK_Rate_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("DatabaseModel.FK_Rate_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Rate_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Rate_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Rate_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Rate_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_Rate_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Semester")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Semester : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Semester object.
        /// </summary>
        /// <param name="semesterID">Initial value of the semesterID property.</param>
        public static Semester CreateSemester(global::System.Int32 semesterID)
        {
            Semester semester = new Semester();
            semester.semesterID = semesterID;
            return semester;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 semesterID
        {
            get
            {
                return _semesterID;
            }
            set
            {
                if (_semesterID != value)
                {
                    OnsemesterIDChanging(value);
                    ReportPropertyChanging("semesterID");
                    _semesterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("semesterID");
                    OnsemesterIDChanged();
                }
            }
        }
        private global::System.Int32 _semesterID;
        partial void OnsemesterIDChanging(global::System.Int32 value);
        partial void OnsemesterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String semesterName
        {
            get
            {
                return _semesterName;
            }
            set
            {
                OnsemesterNameChanging(value);
                ReportPropertyChanging("semesterName");
                _semesterName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("semesterName");
                OnsemesterNameChanged();
            }
        }
        private global::System.String _semesterName;
        partial void OnsemesterNameChanging(global::System.String value);
        partial void OnsemesterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startDate;
        partial void OnstartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> endDate
        {
            get
            {
                return _endDate;
            }
            set
            {
                OnendDateChanging(value);
                ReportPropertyChanging("endDate");
                _endDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("endDate");
                OnendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _endDate;
        partial void OnendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnendDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_Semester", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("DatabaseModel.FK_Class_Semester", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("DatabaseModel.FK_Class_Semester", "Class", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectID">Initial value of the subjectID property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectID)
        {
            Subject subject = new Subject();
            subject.subjectID = subjectID;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 subjectID
        {
            get
            {
                return _subjectID;
            }
            set
            {
                if (_subjectID != value)
                {
                    OnsubjectIDChanging(value);
                    ReportPropertyChanging("subjectID");
                    _subjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("subjectID");
                    OnsubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _subjectID;
        partial void OnsubjectIDChanging(global::System.Int32 value);
        partial void OnsubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String subjectName
        {
            get
            {
                return _subjectName;
            }
            set
            {
                OnsubjectNameChanging(value);
                ReportPropertyChanging("subjectName");
                _subjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("subjectName");
                OnsubjectNameChanged();
            }
        }
        private global::System.String _subjectName;
        partial void OnsubjectNameChanging(global::System.String value);
        partial void OnsubjectNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_Subject", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("DatabaseModel.FK_Class_Subject", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("DatabaseModel.FK_Class_Subject", "Class", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the userID property.</param>
        public static User CreateUser(global::System.Int32 userID)
        {
            User user = new User();
            user.userID = userID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Int32 _userID;
        partial void OnuserIDChanging(global::System.Int32 value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fullName
        {
            get
            {
                return _fullName;
            }
            set
            {
                OnfullNameChanging(value);
                ReportPropertyChanging("fullName");
                _fullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fullName");
                OnfullNameChanged();
            }
        }
        private global::System.String _fullName;
        partial void OnfullNameChanging(global::System.String value);
        partial void OnfullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userType
        {
            get
            {
                return _userType;
            }
            set
            {
                OnuserTypeChanging(value);
                ReportPropertyChanging("userType");
                _userType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userType");
                OnuserTypeChanged();
            }
        }
        private global::System.String _userType;
        partial void OnuserTypeChanging(global::System.String value);
        partial void OnuserTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Class_User", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("DatabaseModel.FK_Class_User", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("DatabaseModel.FK_Class_User", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Enroll_User", "Enroll")]
        public EntityCollection<Enroll> Enrolls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enroll>("DatabaseModel.FK_Enroll_User", "Enroll");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enroll>("DatabaseModel.FK_Enroll_User", "Enroll", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Rate_User", "Rate")]
        public EntityCollection<Rate> Rates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rate>("DatabaseModel.FK_Rate_User", "Rate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rate>("DatabaseModel.FK_Rate_User", "Rate", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
